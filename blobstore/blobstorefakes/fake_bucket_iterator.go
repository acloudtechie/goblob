// This file was generated by counterfeiter
package blobstorefakes

import (
	"sync"

	"github.com/pivotalservices/goblob/blobstore"
)

type FakeBucketIterator struct {
	NextStub        func() (*blobstore.Blob, error)
	nextMutex       sync.RWMutex
	nextArgsForCall []struct{}
	nextReturns     struct {
		result1 *blobstore.Blob
		result2 error
	}
	DoneStub         func()
	doneMutex        sync.RWMutex
	doneArgsForCall  []struct{}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeBucketIterator) Next() (*blobstore.Blob, error) {
	fake.nextMutex.Lock()
	fake.nextArgsForCall = append(fake.nextArgsForCall, struct{}{})
	fake.recordInvocation("Next", []interface{}{})
	fake.nextMutex.Unlock()
	if fake.NextStub != nil {
		return fake.NextStub()
	} else {
		return fake.nextReturns.result1, fake.nextReturns.result2
	}
}

func (fake *FakeBucketIterator) NextCallCount() int {
	fake.nextMutex.RLock()
	defer fake.nextMutex.RUnlock()
	return len(fake.nextArgsForCall)
}

func (fake *FakeBucketIterator) NextReturns(result1 *blobstore.Blob, result2 error) {
	fake.NextStub = nil
	fake.nextReturns = struct {
		result1 *blobstore.Blob
		result2 error
	}{result1, result2}
}

func (fake *FakeBucketIterator) Done() {
	fake.doneMutex.Lock()
	fake.doneArgsForCall = append(fake.doneArgsForCall, struct{}{})
	fake.recordInvocation("Done", []interface{}{})
	fake.doneMutex.Unlock()
	if fake.DoneStub != nil {
		fake.DoneStub()
	}
}

func (fake *FakeBucketIterator) DoneCallCount() int {
	fake.doneMutex.RLock()
	defer fake.doneMutex.RUnlock()
	return len(fake.doneArgsForCall)
}

func (fake *FakeBucketIterator) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.nextMutex.RLock()
	defer fake.nextMutex.RUnlock()
	fake.doneMutex.RLock()
	defer fake.doneMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeBucketIterator) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ blobstore.BucketIterator = new(FakeBucketIterator)
